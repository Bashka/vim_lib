" Date Create: 2015-01-06 13:26:24
" Last Change: 2015-01-06 14:46:50
" Author: Artur Sh. Mamedbekov (Artur-Mamedbekov@yandex.ru)
" License: GNU GPL v3 (http://www.gnu.org/copyleft/gpl.html)

"" {{{1
" Объект представляет базовый класс для всех классов библиотеки.
" Для инстанциации данного класса или его подклассов используется метод new, который создает и инициализирует объект класса.
" Отличительной особенностью объекта является наличие свойства class, которое ссылается на класс, экземпляром которого является объект. Классы этого свойства не имеют.
"" 1}}}
let s:Object = {}

"" {{{1
" Метод создает дочерний по отношению к вызываемому классу класс.
" Для создаваемого дочернего класса определено статичное свойство parent, ссылающееся на вызываемый (родительский класс).
" Все методы вызываемого (родительского) класса копируются в создаваемый дочерний класс.
" @return hash Класс, являющийся дочерним по отношению к вызываемому классу.
"" 1}}}
function! s:Object.expand() " {{{1
  let l:child = {'parent': self}
  " Перенос ссылок на методы класса в подкласс. {{{2
  for l:p in keys(self)
    if type(self[l:p]) == 2
      let l:child[l:p] = self[l:p]
    endif
  endfor
  " 2 }}}
  return l:child
endfunction " 1}}}

"" {{{1
" Метод создает экземпляр вызываемого класса.
" Метод сохраняет ссылку на инстанциируемый (вызываемый) класс в свойстве class объекта.
" Если инстанциируемый (вызываемый) класс является дочерним, метод создает ссылку на объект родительского класса в свойстве parent объекта.
" Данный метод может быть переопределен в дочерних классах с определением аргументов, используемых для инициализации объекта. Делается это следующим образом:
"   function! s:Child.new(a)
"     let s:obj = {'class': self,               " Обязательная ссылка на класс, экземпляром которого является объект.
"                  'parent': self.parent.new()} " Инициализация объекта родительского класса с использованием его конструктора и сохранение ссылки на него. Здесь в конструктор объекта родительского класса следует передать параметры для его инициализации.
"     let s:obj.a = a:a " Инициализируемое свойство объекта.
"     let s:obj.b = 1   " Не инициализируемое свойство объекта.
"     return s:obj
"   endfunction
" @return hash экземпляр вызываемого класса.
"" 1}}}
function! s:Object.new() " {{{1
  let l:obj = {'class': self}
  return l:obj
endfunction " 1}}}

let g:vim_lib#base#Object# = s:Object
